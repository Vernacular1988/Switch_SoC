CC = g++
OPT =
DEBUG = -g

SYSTEMC = /home/steve/SystemC/systemc-2.2.0
SYSTEMC_AMS = /home/steve/SystemC/systemc-ams-1.0Beta2
TUV_AMS = /home/steve/SystemC/TUV_AMS_Library

TARGET_ARCH = linux64
INCDIR = -I. -I.. -I$(SYSTEMC_AMS)/include -I$(SYSTEMC)/include -I$(TUV_AMS)/output/include
LIBDIR = -L. -L.. -L$(SYSTEMC_AMS)/lib-$(TARGET_ARCH) -L$(SYSTEMC)/lib-$(TARGET_ARCH) -L$(TUV_AMS)/output/lib
#CFLAGS = -Wall $(DEBUG) $(OPT) $(INCDIR) $(LIBDIR)
#CFLAGS = $(INCDIR) $(LIBDIR)
#CFLAGS = -Wall $(DEBUG) $(OPT)
CFLAGS = -Wall $(DEBUG)

LIBS = -ltuv_ams_library -lsystemc-ams -lsystemc -lm $(EXTRA_LIBS)

EXE    = $(MODULE).x

.SUFFIXES: .cc .cpp .o .x

$(EXE): $(OBJS) $(SYSTEMC)/lib-$(TARGET_ARCH)/libsystemc.a $(SYSTEMC_AMS)/lib-$(TARGET_ARCH)/libsystemc-ams.a 
	$(CC) $(CFLAGS) $(INCDIR) $(LIBDIR) -o $@ $(OBJS) $(LIBS) 2>&1 | c++filt

.cpp.o:
	$(CC) $(CFLAGS) $(INCDIR) -c $<

.cc.o:
	$(CC) $(CFLAGS) $(INCDIR) -c $<

clean:
	rm -f $(OBJS) *~ $(EXE) core

ultraclean: clean
	rm -f Makefile.deps

Makefile.deps: $(SOURCES)
	$(CC) $(CFLAGS) $(INCDIR) -M $(SRCS) >> Makefile.deps

include ./Makefile.deps
